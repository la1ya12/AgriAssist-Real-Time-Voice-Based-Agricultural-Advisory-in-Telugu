# utils/nlp_model.py
import re

class IntentClassifier:
    def predict(self, text):
        text = text.strip().lower()

        # üå¶ Weather intent
        if any(word in text for word in [
            "‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞Ç", "‡∞µ‡∞∞‡±ç‡∞∑‡∞Ç", "‡∞µ‡∞∞‡±ç‡∞∑‡∞Ç ‡∞™‡∞°‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞æ", "‡∞é‡∞Ç‡∞°", "‡∞é‡∞Ç‡∞°‡∞ó‡∞æ", "‡∞é‡∞Ç‡∞°‡∞ó‡∞æ ‡∞â‡∞Ç‡∞¶‡∞æ",
            "‡∞∏‡±Ç‡∞∞‡±ç‡∞Ø‡±Å‡∞°‡±Å", "‡∞Æ‡∞¨‡±ç‡∞¨‡±Å", "‡∞Æ‡∞¨‡±ç‡∞¨‡±Å‡∞ó‡∞æ", "‡∞ö‡∞≤‡∞ø", "‡∞â‡∞∑‡±ç‡∞£‡±ã‡∞ó‡±ç‡∞∞‡∞§", "‡∞µ‡∞æ‡∞§‡∞æ‡∞µ‡∞∞‡∞£‡∞Ç ‡∞ö‡±Ü‡∞™‡±ç‡∞™‡∞Ç‡∞°‡∞ø",
            "‡∞∏‡±Ç‡∞∞‡±ç‡∞Ø‡∞ï‡∞æ‡∞Ç‡∞§‡∞ø", "‡∞µ‡±Ü‡∞ö‡±ç‡∞ö‡∞ó‡∞æ", "‡∞ö‡∞≤‡±ç‡∞≤‡∞ó‡∞æ"
        ]):
            return "weather", self.extract_location(text)

        # üí∞ Price intent
        elif any(word in text for word in ["‡∞ß‡∞∞", "‡∞∞‡±á‡∞ü‡±ç", "‡∞Æ‡∞æ‡∞∞‡±ç‡∞ï‡±Ü‡∞ü‡±ç", "‡∞Ö‡∞Æ‡±ç‡∞Æ‡∞ï‡∞Ç", "‡∞ß‡∞∞ ‡∞ö‡±Ü‡∞™‡±ç‡∞™‡∞Ç‡∞°‡∞ø"]):
            return "price", self.extract_crop(text)

        # üåæ Advisory intent
        elif any(word in text for word in ["‡∞∏‡∞≤‡∞π‡∞æ", "‡∞™‡∞Ç‡∞ü", "‡∞µ‡±ç‡∞Ø‡∞µ‡∞∏‡∞æ‡∞Ø‡∞Ç", "‡∞é‡∞∞‡±Å‡∞µ‡±Å", "‡∞™‡∞Ç‡∞ü‡∞ï‡±Å ‡∞∏‡∞≤‡∞π‡∞æ"]):
            return "advisory", self.extract_crop(text)

        else:
            return "unknown", None

    def extract_location(self, text):
        telugu_to_english = {
            # Telangana
            "‡∞π‡±à‡∞¶‡∞∞‡∞æ‡∞¨‡∞æ‡∞¶‡±ç": "Hyderabad",
            "‡∞Æ‡±á‡∞°‡±ç‡∞ö‡∞≤‡±ç": "Medchal",
            "‡∞Æ‡±Ü‡∞¶‡∞ï‡±ç": "Medak",
            "‡∞µ‡∞∞‡∞Ç‡∞ó‡∞≤‡±ç": "Warangal",
            "‡∞®‡∞ø‡∞ú‡∞æ‡∞Æ‡∞æ‡∞¨‡∞æ‡∞¶‡±ç": "Nizamabad",
            "‡∞ï‡∞∞‡±Ä‡∞Ç‡∞®‡∞ó‡∞∞‡±ç": "Karimnagar",
            "‡∞ï‡∞æ‡∞Æ‡∞æ‡∞∞‡±Ü‡∞°‡±ç‡∞°‡∞ø": "Kamareddy",
            "‡∞∏‡∞ø‡∞¶‡±ç‡∞¶‡∞ø‡∞™‡±á‡∞ü": "Siddipet",
            "‡∞Æ‡∞π‡∞¨‡±Ç‡∞¨‡±ç‚Äå‡∞®‡∞ó‡∞∞‡±ç": "Mahbubnagar",
            "‡∞∏‡∞Ç‡∞ó‡∞æ‡∞∞‡±Ü‡∞°‡±ç‡∞°‡∞ø": "Sangareddy",
            "‡∞µ‡∞ø‡∞ï‡∞æ‡∞∞‡∞æ‡∞¨‡∞æ‡∞¶‡±ç": "Vikarabad",
            "‡∞∞‡∞Ç‡∞ó‡∞æ‡∞∞‡±Ü‡∞°‡±ç‡∞°‡∞ø": "Ranga Reddy",
            "‡∞ñ‡∞Æ‡±ç‡∞Æ‡∞Ç": "Khammam",
            "‡∞≠‡∞¶‡±ç‡∞∞‡∞æ‡∞¶‡±ç‡∞∞‡∞ø": "Bhadradri Kothagudem",
            "‡∞Æ‡∞π‡∞¨‡±Ç‡∞¨‡∞æ‡∞¨‡∞æ‡∞¶‡±ç": "Mahabubabad",
            "‡∞∏‡±Ç‡∞∞‡±ç‡∞Ø‡∞æ‡∞™‡±á‡∞ü": "Suryapet",
            "‡∞Ø‡∞æ‡∞¶‡∞æ‡∞¶‡±ç‡∞∞‡∞ø": "Yadadri Bhuvanagiri",
            "‡∞ú‡±ã‡∞ó‡±Å‡∞≤‡∞æ‡∞Ç‡∞¨": "Jogulamba Gadwal",
            "‡∞®‡∞æ‡∞ó‡∞∞‡±ç ‡∞ï‡∞∞‡±ç‡∞®‡±Ç‡∞≤‡±ç": "Nagarkurnool",
            "‡∞Æ‡∞Ç‡∞ö‡∞ø‡∞∞‡±ç‡∞Ø‡∞æ‡∞≤": "Mancherial",
            "‡∞ú‡∞ó‡∞ø‡∞§‡±ç‡∞Ø‡∞æ‡∞≤": "Jagtial",
            "‡∞™‡±Ü‡∞¶‡±ç‡∞¶‡∞™‡∞≤‡±ç‡∞≤‡∞ø": "Peddapalli",
            "‡∞®‡∞ø‡∞∞‡±ç‡∞Æ‡∞≤‡±ç": "Nirmal",
            "‡∞Ö‡∞¶‡∞ø‡∞≤‡∞æ‡∞¨‡∞æ‡∞¶‡±ç": "Adilabad",
            "‡∞Æ‡±Å‡∞≤‡±Å‡∞ó‡±Å": "Mulugu",
            "‡∞ú‡∞Ø‡∞∂‡∞Ç‡∞ï‡∞∞‡±ç": "Jayashankar Bhupalpally",
            "‡∞ï‡±ã‡∞ü‡∞ó‡±Ç‡∞°‡±Ü‡∞Ç": "Kothagudem",
            "‡∞ú‡∞®‡∞ó‡∞æ‡∞Æ": "Jangaon",
            "‡∞∞‡∞æ‡∞ú‡∞®‡±ç‡∞®": "Rajanna Sircilla",
            # Andhra (optional)
            "‡∞µ‡∞ø‡∞∂‡∞æ‡∞ñ‡∞™‡∞ü‡±ç‡∞®‡∞Ç": "Visakhapatnam",
            "‡∞µ‡∞ø‡∞ú‡∞Ø‡∞®‡∞ó‡∞∞‡∞Ç": "Vizianagaram",
            "‡∞∂‡±ç‡∞∞‡±Ä‡∞ï‡∞æ‡∞ï‡±Å‡∞≥‡∞Ç": "Srikakulam",
            "‡∞§‡±Ç‡∞∞‡±ç‡∞™‡±Å ‡∞ó‡±ã‡∞¶‡∞æ‡∞µ‡∞∞‡∞ø": "East Godavari",
            "‡∞™‡∞∂‡±ç‡∞ö‡∞ø‡∞Æ ‡∞ó‡±ã‡∞¶‡∞æ‡∞µ‡∞∞‡∞ø": "West Godavari",
            "‡∞ï‡±É‡∞∑‡±ç‡∞£‡∞æ": "Krishna",
            "‡∞ó‡±Å‡∞Ç‡∞ü‡±Ç‡∞∞‡±Å": "Guntur",
            "‡∞™‡±ç‡∞∞‡∞ï‡∞æ‡∞∂‡∞Ç": "Prakasam",
            "‡∞®‡±Ü‡∞≤‡±ç‡∞≤‡±Ç‡∞∞‡±Å": "Nellore",
            "‡∞ö‡∞ø‡∞§‡±ç‡∞§‡±Ç‡∞∞‡±Å": "Chittoor",
            "‡∞ï‡∞°‡∞™": "Kadapa",
            "‡∞ï‡∞∞‡±ç‡∞®‡±Ç‡∞≤‡±Å": "Kurnool",
            "‡∞§‡∞ø‡∞∞‡±Å‡∞™‡∞§‡∞ø": "Tirupati"
        }

        for telugu, eng in telugu_to_english.items():
            if telugu in text:
                return eng  # ‚úÖ Return English name directly for weather API
        return "Medchal"  # Default

    def extract_crop(self, text):
        text = text.lower()

        crop_map = {
        # üå∂ Chillies
            "‡∞Æ‡∞ø‡∞∞‡±ç‡∞ö‡∞ø": "‡∞Æ‡∞ø‡∞∞‡±ç‡∞ö‡∞ø",
            "chilli": "‡∞Æ‡∞ø‡∞∞‡±ç‡∞ö‡∞ø",
            "chillies": "‡∞Æ‡∞ø‡∞∞‡±ç‡∞ö‡∞ø",

        # üåæ Paddy / Rice
            "‡∞¨‡∞ø‡∞Ø‡±ç‡∞Ø‡∞Ç": "‡∞¨‡∞ø‡∞Ø‡±ç‡∞Ø‡∞Ç",
            "‡∞µ‡∞∞‡∞ø": "‡∞µ‡∞∞‡∞ø",
            "rice": "‡∞µ‡∞∞‡∞ø",
            "paddy": "‡∞µ‡∞∞‡∞ø",

        # üßµ Cotton
            "‡∞™‡∞§‡±ç‡∞§‡∞ø": "‡∞™‡∞§‡±ç‡∞§‡∞ø",
            "cotton": "‡∞™‡∞§‡±ç‡∞§‡∞ø",

        # üåΩ Maize / Corn
            "‡∞Æ‡±ä‡∞ï‡±ç‡∞ï‡∞ú‡±ä‡∞®‡±ç‡∞®": "‡∞Æ‡±ä‡∞ï‡±ç‡∞ï‡∞ú‡±ä‡∞®‡±ç‡∞®",
            "corn": "‡∞Æ‡±ä‡∞ï‡±ç‡∞ï‡∞ú‡±ä‡∞®‡±ç‡∞®",
            "maize": "‡∞Æ‡±ä‡∞ï‡±ç‡∞ï‡∞ú‡±ä‡∞®‡±ç‡∞®",

        # üåæ Jowar
            "‡∞ú‡±ä‡∞®‡±ç‡∞®": "‡∞ú‡±ä‡∞®‡±ç‡∞®",
            "jowar": "‡∞ú‡±ä‡∞®‡±ç‡∞®",

        # ü•ú Groundnut / ‡∞™‡∞≤‡±ç‡∞≤‡±Ä
            "‡∞µ‡±á‡∞∞‡±Å‡∞∏‡±Ü‡∞®‡∞ó": "‡∞ó‡±ç‡∞∞‡±å‡∞Ç‡∞°‡±ç‚Äå‡∞®‡∞ü‡±ç",
            "‡∞™‡∞≤‡±ç‡∞≤‡±Ä": "‡∞ó‡±ç‡∞∞‡±å‡∞Ç‡∞°‡±ç‚Äå‡∞®‡∞ü‡±ç",
            "‡∞™‡∞≤‡±ç‡∞≤‡±Ä‡∞≤‡±Å": "‡∞ó‡±ç‡∞∞‡±å‡∞Ç‡∞°‡±ç‚Äå‡∞®‡∞ü‡±ç",
            "‡∞∏‡±Ü‡∞®‡∞ó": "‡∞ó‡±ç‡∞∞‡±å‡∞Ç‡∞°‡±ç‚Äå‡∞®‡∞ü‡±ç",
            "‡∞ó‡±ç‡∞∞‡±å‡∞Ç‡∞°‡±ç ‡∞®‡±Ü‡∞ü‡±ç": "‡∞ó‡±ç‡∞∞‡±å‡∞Ç‡∞°‡±ç‚Äå‡∞®‡∞ü‡±ç",
            "‡∞ó‡±ç‡∞∞‡±å‡∞Ç‡∞°‡±ç‚Äå‡∞®‡∞ü‡±ç": "‡∞ó‡±ç‡∞∞‡±å‡∞Ç‡∞°‡±ç‚Äå‡∞®‡∞ü‡±ç",
            "ground nut": "‡∞ó‡±ç‡∞∞‡±å‡∞Ç‡∞°‡±ç‚Äå‡∞®‡∞ü‡±ç",
            "groundnut": "‡∞ó‡±ç‡∞∞‡±å‡∞Ç‡∞°‡±ç‚Äå‡∞®‡∞ü‡±ç",
            "peanut": "‡∞ó‡±ç‡∞∞‡±å‡∞Ç‡∞°‡±ç‚Äå‡∞®‡∞ü‡±ç",
            "peanuts": "‡∞ó‡±ç‡∞∞‡±å‡∞Ç‡∞°‡±ç‚Äå‡∞®‡∞ü‡±ç",
        }

        for key, val in crop_map.items():
            if key in text:
                return val

    # üÜï if user mentioned an unknown crop name, extract that Telugu word after '‡∞ß‡∞∞'
        if "‡∞ß‡∞∞" in text:
            parts = text.split("‡∞ß‡∞∞")[0].strip().split()
            if parts:
                return parts[-1]  # last word before "‡∞ß‡∞∞"
        return None
